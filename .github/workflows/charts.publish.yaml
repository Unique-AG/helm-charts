# SPDX-SnippetBegin
# SPDX-License-Identifier: Apache License 2.0
# SPDX-SnippetCopyrightText: 2024 © Argo Project, argoproj/argo-helm
# SPDX-SnippetCopyrightText: 2024 © Unique AG
# SPDX-SnippetEnd
## Reference: https://github.com/helm/chart-releaser-action
name: "[charts] Publish"
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "charts/**"

permissions:
  contents: read

jobs:
  publish:
    if: github.repository == 'unique-ag/helm-charts'
    permissions:
      contents: write  # for helm/chart-releaser-action to push chart release and create a release
      packages: write  # to push OCI chart package to GitHub Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: v3.10.1 # Also update in lint-and-test.yaml

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # The GitHub repository secret `PGP_PRIVATE_KEY` contains the private key
      # in ASCII-armored format. To export a (new) key, run this command:
      # `gpg --armor --export-secret-key <my key>`
      # - name: Prepare PGP key
      #   run: |
      #     IFS=""
      #     echo "$PGP_PRIVATE_KEY" | gpg --dearmor > $HOME/secring.gpg
      #     echo "$PGP_PASSPHRASE" > $HOME/passphrase.txt

      #     # Tell chart-releaser-action where to find the key and its passphrase
      #     echo "CR_KEYRING=$HOME/secring.gpg" >> "$GITHUB_ENV"
      #     echo "CR_PASSPHRASE_FILE=$HOME/passphrase.txt" >> "$GITHUB_ENV"
      #   env:
      #     PGP_PRIVATE_KEY: "${{ secrets.PGP_PRIVATE_KEY }}"
      #     PGP_PASSPHRASE: "${{ secrets.PGP_PASSPHRASE }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@a917fd15b20e8b64b94d9158ad54cd6345335584 # v1.6.0
        with:
          config: "./.github/configs/cr.yaml"
          skip_existing: true # immutable artifacts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Login to GHCR
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push charts to GHCR
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*.tgz; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
            helm push "${pkg}" oci://ghcr.io/${REPO}
          done