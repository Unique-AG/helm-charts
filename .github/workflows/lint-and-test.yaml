# SPDX-SnippetBegin
# SPDX-License-Identifier: Apache License 2.0
# SPDX-SnippetCopyrightText: 2024 © Argo Project, argoproj/argo-helm
# SPDX-SnippetCopyrightText: 2024 © Unique AG
# SPDX-SnippetEnd
## Reference: https://github.com/helm/chart-testing-action
name: Linting and Testing
on: pull_request

permissions:
  contents: read

jobs:
  linter-artifacthub:
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/artifacthub/ah:v1.14.0
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Run ah lint
        working-directory: ./charts
        run: ah lint

  chart-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: v3.10.1 # Also update in publish.yaml

      - name: Set up python
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: 3.9

      - name: Setup Chart Linting
        id: lint
        uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1
        with:
          # Note: Also update in scripts/lint.sh
          version: v3.10.0

      - name: List changed charts
        id: list-changed
        run: |
          ## If executed with debug this won't work anymore.
          changed=$(ct --config ./.github/configs/ct-lint.yaml list-changed)
          charts=$(echo "$changed" | tr '\n' ' ' | xargs)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "changed_charts=$charts" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --debug --config ./.github/configs/ct-lint.yaml --lint-conf ./.github/configs/lintconf.yaml

      - name: Run docs-testing (helm-docs)
        id: helm-docs
        run: |
          ./scripts/helm-docs.sh
          if [[ $(git diff --stat) != '' ]]; then
            echo -e '\033[0;31mDocumentation outdated!\033[0m ❌'
            git diff --color
            exit 1
          else
            echo -e '\033[0;32mDocumentation up to date\033[0m ✔'
          fi

      - run: helm plugin install https://github.com/helm-unittest/helm-unittest.git 

      - name: Run Unit Tests
        run: |
          for chart in ${{steps.list-changed.outputs.changed_charts}}; do
            echo "Unit testing chart: $chart"
            helm unittest $chart
          done

      - name: Create kind cluster
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          config: .github/configs/kind-config.yaml
      
      - name: Deploy latest CRDs (secrets-store.csi.x-k8s.io) when testing affected charts
        if: |
          contains(steps.list-changed.outputs.changed_charts, 'backend-service')
        run: |
          kubectl apply -f https://raw.githubusercontent.com/TykTechnologies/tyk-operator/v0.18.0/helm/crds/crds.yaml
      # csi-secrets-store-provider-azure can not be tested properly for sscsid-keeper as the underlying Machine Identities are not present and thus the pods fail to start
      # helm repo add csi-secrets-store-provider-azure https://azure.github.io/secrets-store-csi-driver-provider-azure/charts
      # helm install csi csi-secrets-store-provider-azure/csi-secrets-store-provider-azure

      # - name: Skip HPA tests of ArgoCD
      #   if: contains(steps.list-changed.outputs.changed_charts, 'argo-cd')
      #   run: |
      #     ## Metrics API not available in kind cluster
      #     rm charts/argo-cd/ci/ha-autoscaling-values.yaml

      # - name: Create an external redis for ArgoCD externalRedis feature
      #   if: contains(steps.list-changed.outputs.changed_charts, 'argo-cd')
      #   run: |
      #     kubectl create namespace redis
      #     helm repo add bitnami https://charts.bitnami.com/bitnami
      #     helm install redis bitnami/redis --wait --namespace redis --set auth.password=argocd --set architecture=standalone

      #! fixme: for now we can not install our charts, because actually, they would need to pull the images, which are private
      # - name: Run chart-testing (install)
      #   run: ct install --config ./.github/configs/ct-install.yaml
      #   if: steps.list-changed.outputs.changed == 'true'
