# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Test SecretProviderClass
templates:
  - secret-provider-class.yaml
release:
  name: ut
tests:
  - it: When given a list of secrets, renders secretObjects containing at least 1 key
    set:
      spc:
        secrets:
          - k8sSecretDataKey: keyTestUt
            kvObjectName: my-api-key

    template: secret-provider-class.yaml
    asserts:
      - isKind:
          of: SecretProviderClass
      - exists:
          path: spec.secretObjects[?(@.secretName == "ut-sscsid-keeper")]
      - exists:
          path: spec.secretObjects[?(@.secretName == "ut-sscsid-keeper")].data[?(@.key == "keyTestUt")]

  - it: When given a new secret type, renders such (kubernetes.io/dockerconfigjson)
    set:
      spc:
        k8sSecretType: kubernetes.io/dockerconfigjson
        secrets:
          - k8sSecretDataKey: .dockerconfigjson
            kvObjectName: my-own-dockerconfig

    template: secret-provider-class.yaml
    asserts:
      - isKind:
          of: SecretProviderClass
      - exists:
          path: spec.secretObjects[?(@.secretName == "ut-sscsid-keeper")]
      - exists:
          path: spec.secretObjects[?(@.type == "kubernetes.io/dockerconfigjson")]
      - exists:
          path: spec.secretObjects[?(@.secretName == "ut-sscsid-keeper")].data[?(@.key == ".dockerconfigjson")]

  - it: When given labels, renders them in the metadata
    set:
      spc:
        labels:
          some.example.com/value: 'render'
          some.example.com/value2: 'render2'
        secrets:
          - k8sSecretDataKey: .dockerconfigjson
            kvObjectName: my-own-dockerconfig

    template: secret-provider-class.yaml
    asserts:
      - isKind:
          of: SecretProviderClass
      - exists:
          path: spec.secretObjects[?(@.secretName == "ut-sscsid-keeper")].labels["some.example.com/value"]
      - equal:
          path: spec.secretObjects[?(@.secretName == "ut-sscsid-keeper")].labels["some.example.com/value"]
          value: render
