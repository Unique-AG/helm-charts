{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "SSCSID Keeper Helm Chart Values",
  "description": "Schema for the sscsid-keeper Helm chart values.yaml",
  "type": "object",
  "properties": {
    "nameOverride": {
      "type": "string",
      "description": "This is to override the release name"
    },
    "fullnameOverride": {
      "type": "string",
      "description": "This is to override the full name"
    },
    "keeper": {
      "type": "object",
      "description": "Set options for the deployed keeper, its deployment and pods respectively",
      "properties": {
        "replicaCount": {
          "type": "integer",
          "description": "This will set the replicaset count",
          "minimum": 1,
          "examples": [2]
        },
        "image": {
          "type": "object",
          "description": "This sets the container image",
          "properties": {
            "repository": {
              "type": "string",
              "description": "This sets the image repository",
              "examples": ["busybox"]
            },
            "pullPolicy": {
              "type": "string",
              "enum": ["Always", "IfNotPresent", "Never"],
              "description": "This sets the pull policy for images",
              "examples": ["IfNotPresent"]
            },
            "tag": {
              "type": "string",
              "description": "Overrides the image tag whose default is the chart appVersion",
              "examples": ["1.37.0"]
            }
          },
          "required": ["repository", "tag"]
        },
        "command": {
          "type": "array",
          "description": "Command to run in the container",
          "items": {
            "type": "string"
          },
          "examples": [["/bin/sleep", "99999"]]
        },
        "imagePullSecrets": {
          "type": "array",
          "description": "This is for the secrets for pulling an image from a private repository",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the image pull secret"
              }
            }
          }
        },
        "podAnnotations": {
          "type": "object",
          "description": "This is for setting Kubernetes Annotations to a Pod"
        },
        "podLabels": {
          "type": "object",
          "description": "This is for setting Kubernetes Labels to a Pod"
        },
        "podSecurityContext": {
          "type": "object",
          "description": "Toggle and define pod-level security context",
          "examples": [{}]
        },
        "securityContext": {
          "type": "object",
          "description": "Toggle and define security context",
          "properties": {
            "runAsUser": {
              "type": "integer",
              "description": "User ID to run as",
              "minimum": 0,
              "examples": [1000]
            },
            "allowPrivilegeEscalation": {
              "type": "boolean",
              "description": "Allow privilege escalation",
              "examples": [false]
            },
            "capabilities": {
              "type": "object",
              "description": "Container capabilities configuration",
              "properties": {
                "drop": {
                  "type": "array",
                  "description": "Capabilities to drop",
                  "items": {
                    "type": "string"
                  },
                  "examples": [["ALL"]]
                }
              }
            },
            "readOnlyRootFilesystem": {
              "type": "boolean",
              "description": "Read-only root filesystem",
              "examples": [true]
            },
            "runAsNonRoot": {
              "type": "boolean",
              "description": "Run as non-root user",
              "examples": [true]
            }
          }
        },
        "resourcesPreset": {
          "type": "string",
          "description": "Set container resources according to one common preset",
          "enum": ["none", "yocto", "zepto", "atto"],
          "examples": ["yocto"]
        },
        "resources": {
          "type": "object",
          "description": "Set container requests and limits for different resources like CPU or memory",
          "properties": {
            "limits": {
              "type": "object",
              "description": "Resource limits",
              "properties": {
                "cpu": {
                  "type": "string",
                  "description": "CPU limit",
                  "examples": ["100m"]
                },
                "memory": {
                  "type": "string",
                  "description": "Memory limit",
                  "examples": ["128Mi"]
                }
              }
            },
            "requests": {
              "type": "object",
              "description": "Resource requests",
              "properties": {
                "cpu": {
                  "type": "string",
                  "description": "CPU request",
                  "examples": ["100m"]
                },
                "memory": {
                  "type": "string",
                  "description": "Memory request",
                  "examples": ["128Mi"]
                }
              }
            }
          }
        },
        "nodeSelector": {
          "type": "object",
          "description": "Node Selector for the keeper"
        },
        "tolerations": {
          "type": "array",
          "description": "Tolerations for the keeper",
          "items": {
            "type": "object"
          }
        },
        "affinity": {
          "type": "object",
          "description": "Default affinity preset for the keeper"
        },
        "pdb": {
          "type": "object",
          "description": "Set the PodDisruptionBudget for the keeper",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enabled by default as it keeps the secret",
              "examples": [true]
            },
            "minAvailable": {
              "description": "Defines how many pods should be kept around, half of the replica in our example",
              "oneOf": [
                { "type": "string" },
                { "type": "integer", "minimum": 1 }
              ],
              "examples": [1]
            }
          }
        }
      },
      "required": ["replicaCount", "image"]
    },
    "spc": {
      "type": "object",
      "description": "Set options for the Secret Provider Class",
      "properties": {
        "kvName": {
          "type": "string",
          "description": "Azure KeyVault which stores the secrets, must be available over the network",
          "examples": ["keyvault-name"]
        },
        "tenantId": {
          "type": "string",
          "description": "Azure Entra ID Tenant ID wherein the Managed Identity is present",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "examples": ["00000000-0000-0000-0000-000000000000"]
        },
        "identityId": {
          "type": "string",
          "description": "Azure Entra ID Identity Client ID",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "examples": ["00000000-0000-0000-0000-000000000000"]
        },
        "k8sSecretType": {
          "type": "string",
          "description": "Type of Kubernetes Secret",
          "examples": ["Opaque"]
        },
        "labels": {
          "type": "object",
          "description": "Set the labels for the Secret Provider Class"
        },
        "secrets": {
          "type": "array",
          "description": "Set the secret objects for the Secret Provider Class",
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "k8sSecretDataKey": {
                "type": "string",
                "description": "Defines which key in the secret object should be used",
                "examples": ["apiKeyExample"]
              },
              "kvObjectName": {
                "type": "string",
                "description": "Defines which object from the Key Vault should be used",
                "examples": ["my-special-example-key"]
              }
            },
            "required": ["k8sSecretDataKey", "kvObjectName"]
          }
        }
      },
      "required": ["kvName", "tenantId", "identityId", "secrets"]
    }
  },
  "required": ["keeper", "spc"]
}
