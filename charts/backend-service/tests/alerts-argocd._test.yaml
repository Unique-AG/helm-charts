# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: Regression Test ArgoCD Alerts
templates:
  - alerts/alerts-argocd.yaml
release:
  name: ut
tests:
  - it: should render argocd alerts when prometheus and argocd are enabled
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - equal:
          path: metadata.name
          value: ut-argocd-alerts
      - equal:
          path: metadata.labels.alertGroup
          value: argocd
      - equal:
          path: spec.groups[0].name
          value: ut-argocd
      - isNotEmpty:
          path: spec.groups[0].rules

  - it: should not render when prometheus is disabled
    set:
      prometheus.enabled: false
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - hasDocuments:
          count: 0

  - it: should not render when argocd alerts are disabled
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: false
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - hasDocuments:
          count: 0

  - it: should not render when monitoring.coreos.com/v1 API is not available
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions: []
    asserts:
      - hasDocuments:
          count: 0

  - it: should use custom application name when provided
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
      prometheus.defaultAlerts.argocd.applicationName: "custom-app-name"
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDegraded
            expr: |
              argocd_app_info{health_status="Degraded", dest_namespace="default, name="custom-app-name""} > 0

  - it: should use fullname as default application name
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDegraded
            expr: |
              argocd_app_info{health_status="Degraded", dest_namespace="default, name="ut""} > 0

  - it: should render with custom for duration
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
      prometheus.defaultAlerts.argocd.for: "10m"
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDegraded
            for: "10m"

  - it: should include additional labels when configured
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
      prometheus.defaultAlerts.additionalLabels:
        environment: production
        team: platform
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - equal:
          path: metadata.labels.environment
          value: production
      - equal:
          path: metadata.labels.team
          value: platform

  - it: should contain all expected argocd alerts
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDegraded
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationSyncError
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDeletionError
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationInvalidSpecError
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationComparisonError
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationUnknownError

  - it: should have correct severity levels for different alerts
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDegraded
            labels:
              severity: warning
              alertGroup: argocd
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationSyncError
            labels:
              severity: critical
              alertGroup: argocd

  - it: should have proper expressions for sync error alert
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationSyncError
            expr: |
              argocd_app_condition{name="ut", type="SyncError", status="True"} > 0

  - it: should have proper expressions for deletion error alert
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDeletionError
            expr: |
              argocd_app_condition{name="ut", type="DeletionError", status="True"} > 0

  - it: should have proper annotations for all alerts
    set:
      prometheus.enabled: true
      prometheus.defaultAlerts.argocd.enabled: true
    capabilities:
      apiVersions:
        - monitoring.coreos.com/v1
    asserts:
      - isKind:
          of: PrometheusRule
      - contains:
          path: spec.groups[0].rules
          content:
            alert: ArgoCDApplicationDegraded
            annotations:
              summary: "ArgoCD application ut is unhealthy"
              description: "ArgoCD application ut health condition is not True for more than 5 minutes"
