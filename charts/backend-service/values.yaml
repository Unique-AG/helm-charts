# -- Global configuration
global: {}

# -- Override the name of the chart
nameOverride: ""

# -- Override the full name of the chart
fullnameOverride: ""

# -- Number of replicas for the deployment
replicaCount: 1

# -- Image configuration
image:
  # -- Repository where the service image is pulled from
  repository: "ghcr.io/unique-ag/chart-testing-service"
  # -- Image tag, most often will refer to one of the latest releases
  tag: "1.0.3"
  # -- Image pull policy
  pullPolicy: IfNotPresent

# -- Image pull secrets for private registries
imagePullSecrets: []

# -- Service account configuration
serviceAccount:
  # -- Enable service account creation
  enabled: false
  # -- Annotations for the service account
  annotations: {}
  # -- Name of the service account (auto-generated if not set)
  name: ""
  # -- Workload identity configuration
  workloadIdentity:
    enabled: false

# -- Pod security context
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault

# -- Container security context
securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop:
      - ALL

# -- Service configuration
service:
  enabled: true
  type: ClusterIP
  port: 80
  # -- Additional labels for the service
  extraLabels: {}

# -- Port configuration
ports:
  # -- Application port (container port)
  application: 8080
  # -- Service port (service port)
  service: 80

# -- Environment variables as key-value pairs (stored in ConfigMap)
env: {}

# -- Secret environment variables as key-value pairs (stored in Secret)
envSecrets: {}

# -- Environment variables with advanced configuration
envVars: []
# - name: MY_VAR
#   value: "my-value"
# - name: SECRET_VAR
#   valueFrom:
#     secretKeyRef:
#       name: my-secret
#       key: my-key

# -- Additional ConfigMaps to load as environment variables
extraEnvConfigMaps: []

# -- Additional Secrets to load as environment variables
extraEnvSecrets: []

# -- Init containers configuration
initContainers: []
# - name: init-container
#   image: busybox:1.28
#   command: ['sh', '-c', 'echo "Initializing..."']

# -- Additional containers to run alongside the main container
sidecars: []

# -- Probes configuration
probes:
  enabled: true
  liveness:
    httpGet:
      path: /probe
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 6
  readiness:
    httpGet:
      path: /probe
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    failureThreshold: 6
  startup:
    httpGet:
      path: /probe
      port: http
    initialDelaySeconds: 10
    failureThreshold: 30
    periodSeconds: 10

# -- Resource limits and requests
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# -- Horizontal Pod Autoscaler configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- KEDA autoscaling configuration
keda:
  enabled: false
  paused: false
  extraAnnotations: {}
  pollingInterval: 30
  cooldownPeriod: 300
  # idleReplicaCount: 0
  minReplicaCount: 1
  maxReplicaCount: 4
  scalers: []
  # - type: rabbitmq
  #   metadata:
  #     protocol: amqp
  #     queueName: testqueue
  #     mode: QueueLength
  #     value: "20"

# -- Pod Disruption Budget configuration
pdb:
  maxUnavailable: 30%

# -- Rolling update strategy
rollingUpdate:
  maxSurge: 1
  maxUnavailable: 0

# -- Node selector
nodeSelector: {}

# -- Tolerations
tolerations: []

# -- Affinity rules
affinity: {}

# -- Pod annotations
podAnnotations: {}

# -- Pod labels
podLabels: {}

# -- Termination grace period in seconds
terminationGracePeriodSeconds: 30

# -- Volume mounts
volumeMounts: []

# -- Volumes
volumes: []

# -- Secrets provider configuration (Azure Key Vault, AWS Secrets Manager, etc.)
secretsProvider:
  enabled: false
  # -- Provider type (azure, aws, gcp, vault)
  provider: azure
  # -- Polling interval for secret updates
  pollingInterval: "2m"
  # -- Azure-specific configuration
  azure:
    tenantId: ""
    # -- Use workload identity (recommended)
    workloadIdentity:
      enabled: true
      clientId: ""
    # -- Key vaults configuration
    keyVaults: []
    # - name: my-keyvault
    #   secrets:
    #     - name: my-secret
    #       key: secret-key
    #       version: ""  # latest if empty
    #   keys:
    #     - name: my-key
    #       key: key-name
    #       version: ""
    #   certificates:
    #     - name: my-cert
    #       key: cert-name
    #       version: ""

# -- External secrets configuration (external-secrets operator)
externalSecrets: []
# - name: my-external-secret
#   secretStore:
#     name: my-secret-store
#     kind: SecretStore
#   target:
#     name: my-k8s-secret
#     creationPolicy: Owner
#   data:
#     - secretKey: username
#       remoteRef:
#         key: my-secret
#         property: username

# -- Extra CronJobs configuration
extraCronJobs: {}
# my-cronjob:
#   suspend: false
#   schedule: "0 0 1 1 *"
#   timeZone: "Europe/Zurich"
#   concurrencyPolicy: Forbid
#   restartPolicy: Never
#   successfulJobsHistoryLimit: 3
#   failedJobsHistoryLimit: 3
#   startingDeadlineSeconds: 10
#   command: ["echo", "Hello World"]
#   envVars:
#     - name: RUNNING_MODE
#       value: "cronjob"

# -- Hooks configuration
hooks:
  migration:
    enabled: false
    # name: "" # defaults to db-migration
    command: ""
    # initContainers: []

# -- Gateway API routes configuration
routes:
  hostname: chart-testing-service.example.com
  gateway:
    name: kong
    namespace: system
  pathPrefix: ""
  paths:
    default:
      enabled: false
      blockList:
        - /metrics
      extraAnnotations: []
    versioned:
      enabled: false
      pathOverride: /public
      extraAnnotations: []
    scoped:
      enabled: false
      pathOverride: /scoped
      allowList:
        - /upload
      extraAnnotations: []
    probe:
      enabled: false
      probePath: /probe
      extraAnnotations: []

# -- Extra Gateway API routes
extraRoutes:
  extra-route-1:
    enabled: false
    apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    annotations: {}
    labels: {}
    hostnames: []
    parentRefs:
      - name: kong
        namespace: kong-system
        group: gateway.networking.k8s.io
        kind: Gateway
    matches:
      - path:
          type: PathPrefix
          value: /
    filters: []
    additionalRules: []

# -- Prometheus monitoring configuration
prometheus:
  enabled: false
  # team: <team-name>
  # rules: {}

# -- Audit volume configuration
auditVolume:
  enabled: false
  mountPath: /audit
  capacity: 1Ti
  attributes:
    resourceGroup: my-azure-resource-group
    storageAccount: my-azure-storage-account
    # containerName: my-azure-container

# -- Extra Kubernetes objects to deploy
extraObjects: []

# -- Cluster internal service suffix override
clusterInternalServiceSuffix: ".svc.cluster.local"

# -- Minimum ready seconds for deployment
minReadySeconds: 5
